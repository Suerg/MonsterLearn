Data Types, Operators, and Expressions
Which of these in not a core datatype?
endQ
10
a) Lists
b) Dictionary
c) Tuples
d) Class
d
Class is a user defined datatype.
endA

Given a function that does not return any value, What value is thrown by itby default when executed in shell.
endQ
10
a) int
b) bool
c) void
d) None
d
Python shell throws a NoneType object back.
endA

Which is the correct operator for power(x^y)?
endQ
10
a) X^y
b) X**y
c) X^^y
d) None of the mentioned
b
In python, power operator is x**y i.e. 2**3=8.
endA

Which one of these is floor division?
endQ
10
a) /
b) //
c) %
d) None of the mentioned
b
When both of the operands are integer then python chops out the fraction part and gives you the round off value, to get the accurate answer use floor division. This is floor division. For ex, 5/2 = 2.5 but both of the operands are integer so answer of this expression in python is 2.To get the 2.5 answer, use floor division.
endA

What is answer of this expression, 22 % 3 is?
endQ
10
a) 7
b) 1
c) 0
d) 5
b
Modulus operator gives remainder. So, 22%3 gives 1 remainder.
endA

You can perform mathematical operation on String?
endQ
10
a) True
b) False
b
You can’t perform mathematical operation on string even if string looks like integers.
endA

What is the output of this expression, 3*1**3?
endQ
10
a) 27
b) 9
c) 3
d) 1
c
First this expression will solve 1**3 because exponential have higher precedence than multiplication, so 1**3 = 1 and 3*1 = 3. Final answer is 3.
endA

What is the maximum possible length of an identifier?
endQ
10
a) 31 characters
b) 63 characters
c) 79 characters
d) none of the mentioned
d
Identifiers can be of any length.
endA

Which of the following is not a keyword?
endQ
10
a) eval
b) assert
c) nonlocal
d) pass
a
eval can be used as a variable.
endA

Which of the following cannot be a variable?
endQ
10
a) __init__
b) in
c) it
d) on
b
in is a keyword.
endA

1. Which module in Python supports regular expressions?
endQ
10
a) re
b) regex
c) pyregex
d) none of the mentioned
a
re is a part of the standard library and can be imported using: import re.
endA

What is the output of the following?
sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group(2))
endQ
10
a) ‘are’
b) ‘we’
c) ‘humans’
d) ‘we are humans’
c
This function returns the particular subgroup.
endA

What is the output of print 0.1 + 0.2 == 0.3?
endQ
10
a) True
b) False
c) Machine dependent
d) Error
b
Neither of 0.1, 0.2 and 0.3 can be represented accurately in binary. The round off errors from 0.1 and 0.2 accumulate and hence there is a difference of 5.5511e-17 between (0.1 + 0.2) and 0.3.
endA

Which of the following is not a complex number?
endQ
10
a) k = 2 + 3j
b) k = complex(2, 3)
c) k = 2 + 3l
d) k = 2 + 3J
c
l (or L) stands for long.
endA

What does ~4 evaluate to?
endQ
10
a) -5
b) -4
c) -3
d) +3
a
~x is equivalent to -(x+1).
endA
endT

Loops
What is the output of the following?
x = ['ab', 'cd']
for i in x:
    i.upper()
print(x)
endQ
20
a) [‘ab’, ‘cd’] 
b) [‘AB’, ‘CD’] 
c) [None, None]
d) none of the mentioned
a
The function upper() does not modify a string in place, it returns a new string which isn’t being stored anywhere.
endA

What is the output of the following?
x = ['ab', 'cd']
for i in x:
    x.append(i.upper())
print(x)
endQ
20
a) [‘AB’, ‘CD’]
b) [‘ab’, ‘cd’, ‘AB’, ‘CD’]
c) [‘ab’, ‘cd’]
d) none of the mentioned
d
The loop does not terminate as new elements are being added to the list in each iteration.
endA

What is the output of the following?
i = 1
while True:
    if i%3 == 0:
        break
    print(i)
    i + = 1
endQ
20
a) 1 2
b) 1 2 3
c) error
d) none of the mentioned
c
SyntaxError, there shouldn’t be a space between + and = in +=.
endA

What is the output of the following?
i = 5
while True:
    if i%0O11 == 0:
        break
    print(i)
    i += 1
endQ
20
a) 5 6 7 8 9 10
b) 5 6 7 8
c) 5 6
d) error
b
0O11 is an octal number.
endA

What is the output of the following?
i = 5
while True:
    if i%0O9 == 0:
        break
    print(i)
    i += 1
endQ
20
a) 5 6 7 8
b) 5 6 7 8 9
c) 5 6 7 8 9 10 11 12 13 14 15 ….
d) error
d
9 isn’t allowed in an octal number.
endA

What is the output of the following?
i = 1
while True:
    if i%2 == 0:
        break
    print(i)
    i += 2
endQ
20
a) 1
b) 1 2
c) 1 2 3 4 5 6 …
d) 1 3 5 7 9 11 …
d
The loop does not terminate since i is never an even number.
endA

What is the output of the following?
i = 1
while True:
    if i%2 == 0:
        break
    print(i)
    i += 2
endQ
20
a) 1
b) 1 2
c) 1 2 3 4 5 6 …
d) 1 3 5 7 9 11 …
d
The loop does not terminate since i is never an even number.
endA

What is the output of the following?
i = 1
while False:
    if i%2 == 0:
        break
    print(i)
    i += 2
endQ
20
a) 1
b) 1 3 5 7 …
c) 1 2 3 4 …
d) none of the mentioned
d
Control does not enter the loop because of False.
end A

What is the output of the following?
True = False
while True:
    print(True)
    break
endQ
20
a) True
b) False
c) None
d) none of the mentioned
d
SyntaxError, True is a keyword and it’s value cannot be changed.
endA

What is the output of the following?
i = 0
while i < 5:
    print(i)
    i += 1
    if i == 3:
        break
else:
    print(0)
endQ
10
a) 0 1 2 0
b) 0 1 2
c) error
d) none of the mentioned
View Answer
b
The else part is not executed if control breaks out of the loop.
endA

What is the output of the following?
i = 0
while i < 3:
    print(i)
    i += 1
else:
    print(0)
endQ
10
a) 0 1 2 3 0
b) 0 1 2 0
c) 0 1 2
c) error
b
The else part is executed when the condition in the while statement is false.
endA

What is the output of the following?
x = "abcdef"
while i in x:
    print(i, end=" ")
endQ
10
a) a b c d e f
b) abcdef
c) i i i i i i …
d) error
d
NameError, i is not defined.
endA
endT

Strings
What is the output when following statement is executed ?
>>>"a"+"bc"
endQ
10
a) a
b) bc
c) bca
d) abc
d
+ operator is concatenation operator.
endA

What is the output when following statement is executed ?
>>>"abcd"[2:]
endQ
10
a) a
b) ab
c) cd
d) dc
c
Slice operation is performed on string.
endA

The output of executing string.ascii_letters can also be achieved by:
endQ
10
a) string.ascii_lowercase_string.digits
b) string.ascii_lowercase+string.ascii_upercase
c) string.letters
d) string.lowercase_string.upercase
b
Execute in shell and check.
endA

What is the output when following code is executed ?
>>> str1 = 'hello'
>>> str2 = ','
>>> str3 = 'world'
>>> str1[-1:]
endQ
15
a) olleh
b) hello
c) h
d) o
d
-1 corresponds to the last index.
endA

What is the output when following code is executed ?
>>>print r"\nhello"
The output is
endQ
15
a) a new line and hello
b) \nhello
c) the letter r and then hello
d) Error
b
When prefixed with the letter ‘r’ or ‘R’ a string literal becomes a raw string and the escape sequences such as \n are not converted.
endA

What is the output when following statement is executed ?
>>>print 'new' 'line'
endQ
10
a) Error
b) Output equivalent to print ‘new\nline’
c) newline
d) new line
c
String literals seperated by white space are allowed. They are concatenated.
endA

What is the output when following statement is executed ?
>>>print '\x97\x98'
endQ
10
a) Error
b) 97
98
c) _~
d) \x97\x98
c
\x is an escape sequence that means the following 2 digits are a hexadicmal number encoding a character.
endA

What is the output when following code is executed ?
>>>str1="helloworld"
>>>str1[::-1]
endQ
15
a) dlrowolleh
b) hello
c) world
d) helloworld
a
Execute in shell to verify.
endA

print 0xA + 0xB + 0xC :
endQ
10
a) 0xA0xB0xC
b) Error
c) 0x22
d) 33
d
0xA and 0xB and 0xC are hexadecimal integer literals representing the decimal values 10,11 and 12 respectively. There sum is 33.
endA

What is “Hello”.replace(“l”, “e”)
endQ
10
a) Heeeo
b) Heelo
c) Heleo
d) None
a
Execute in shell to verify.
endA

Suppose i is 5 and j is 4, i + j is same as
endQ
10
a) i.__add(j)
b) i.__add__(j)
c) i.__Add(j)
d) i.__ADD(j)
b
Execute in shell to verify.
endA

Suppose x is 345.3546, what is format(x, “10.3f”) (_ indicates space)
endQ
10
a) __345.355
b) ___345.355
c) ____345.355
d) _____345.354
b
Execute in the shell to verify.
endA
endT

Lists
What is the output when we execute list(“hello”)?
endQ
10
a) [‘h’, ‘e’, ‘l’, ‘l’, ‘o’]
b) [‘hello’]
c) [‘llo’]
d) [‘olleh’]
a
execute in the shell to verify.
endA

Suppose listExample is [‘h’,’e’,’l’,’l’,’o’], what is len(listExample)?
endQ
10
a) 5
b) 4
c) None
d) Error
a
Execute in the shell and verify.
endA

Suppose list1 is [2445,133,12454,123], what is max(list1) ?
endQ
10
a) 2445
b) 133
c) 12454
d) 123
c
max returns the maximum element in the list.
endA

Suppose list1 is [3, 5, 25, 1, 3], what is min(list1) ?
endQ
10
a) 3
b) 5
c) 25
d) 1
d
min returns the minimum element in the list.
endA

Suppose list1 is [1, 5, 9], what is sum(list1) ?
endQ
10
a) 1
b) 9
c) 15
d) Error
c
Sum returns the sum of all elements in the list.
endA

To shuffle the list(say list1) what function do we use ?
endQ
10
a) list1.shuffle()
b) shuffle(list1)
c) random.shuffle(list1)
d) random.shuffleList(list1)
c
Execute in the shell to verify
endA

Suppose list1 is [2, 33, 222, 14, 25], What is list1[-1] ?
endQ
10
a) Error
b) None
c) 25
d) 2
c
-1 corresponds to the last index in the list.
endA

Suppose list1 is [2, 33, 222, 14, 25], What is list1[:-1] ?
endQ
10
a) [2, 33, 222, 14] 
b) Error
c) 25
d) [25, 14, 222, 33, 2]
a
Execute in the shell to verify.
endA

What is the output when following code is executed ?
>>>names = ['Amir', 'Bear', 'Charlton', 'Daman']
>>>print names[-1][-1]
endQ
10
a) A
b) Daman
c) Error
d) n
d
Execute in the shell to verify.
endA

Suppose list1 is [1, 3, 2], What is list1 * 2 ?
endQ
10
a) [2, 6, 4]
b) [1, 3, 2, 1, 3] 
c) [1, 3, 2, 1, 3, 2] 
d) [1, 3, 2, 3, 2, 1] 
c
Execute in the shell and verify.
endA

Suppose list1 = [0.5 * x for x in range(0, 4)], list1 is :
endQ
10
a) [0, 1, 2, 3] 
b) [0, 1, 2, 3, 4] 
c) [0.0, 0.5, 1.0, 1.5] 
d) [0.0, 0.5, 1.0, 1.5, 2.0] 
c
Execute in the shell to verify.
endA

What is the output when following code is executed ?
endQ
10
>>>list1 = [11, 2, 23]
>>>list2 = [11, 2, 2]
>>>list1 < list2 is
a) True
b) False
c) Error
d) None
b
Elements are compared one by one.
endA
endT

Files and Functions
o open a file c:\scores.txt for reading, we use
endQ
10
a) infile = open(“c:\scores.txt”, “r”)
b) infile = open(“c:\\scores.txt”, “r”)
c) infile = open(file = “c:\scores.txt”, “r”)
d) infile = open(file = “c:\\scores.txt”, “r”)
b
Execute help(open) to get more details.
endA

o open a file c:\scores.txt for writing, we use
endQ
10
a) outfile = open(“c:\scores.txt”, “w”)
b) outfile = open(“c:\\scores.txt”, “w”)
c) outfile = open(file = “c:\scores.txt”, “w”)
d) outfile = open(file = “c:\\scores.txt”, “w”)
b
w is used to indicate that file is to be written to.
endA

To open a file c:\scores.txt for appending data, we use
endQ
10
a) outfile = open(“c:\\scores.txt”, “a”)
b) outfile = open(“c:\\scores.txt”, “rw”)
c) outfile = open(file = “c:\scores.txt”, “w”)
d) outfile = open(file = “c:\\scores.txt”, “w”)
a
a is used to indicate that data is to be apended.
endA

To read two characters from a file object infile, we use
endQ
10
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()
a
Execute in the shell to verify.
endA

To read the entire remaining contents of the file as a string from a file object infile, we use
endQ
10
a) infile.read(2)
b) infile.read()
c) infile.readline()
d) infile.readlines()
b
read function is used to read all the lines in a file.
endA

What is the output?
f = None
for i in range (5):
    with open("data.txt", "w") as f:
        if i > 2:
            break
print f.closed
endQ
15
a) True
b) False
c) None
d) Error
a
The WITH statement when used with open file guarantees that the file object is closed when the with block exits.
endA

Which of the following is the use of function in python?
endQ
10
a) Functions are reusable pieces of programs
b) Functions don’t provide better modularity for your application
c) you can’t also create your own functions
d) All of the mentioned
a
Functions are reusable pieces of programs. They allow you to give a name to a block of statements, allowing you to run that block using the specified name anywhere in your program and any number of times.
endA

Which keyword is use for function?
endQ
10
a) Fun
b) Define
c) Def
d) Function
c
Explanation: None.
endA

n file handling, what does this terms means “r, a”?
endQ
10
a) read, append
b) append, read
c) All of the mentioned
d) None of the the mentioned
a
r- reading, a-appending.
endA

What is the use of “w” in file handling?
endQ
10
a) Read
b) Write
c) Append
d) None of the the mentioned
b
This opens the file for writing. It will create the file if it doesn’t exist, and if it does, it will overwrite it.
endA

What is the use of “a” in file handling?
endQ
10
a) Read
b) Write
c) Append
d) None of the the mentioned
c
This opens the fhe file in appending mode. That means, it will be open for writing and everything will be written to the end of the file.
endA

Which function is used to read all the characters?
endQ
10
a) Read()
b) Readcharacters()
c) Readall()
d) Readchar()
a
The read function reads all characters fh = open(“filename”, “r”)
endA

Which function is used to close a file in python?
endQ
10
a) Close()
b) Stop()
c) End()
d) Closefile()
a
f.close()to close it and free up any system resources taken up by the open file.
endA
endT
