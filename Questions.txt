Data Types, Operators, and Expressions
Which of these in not a core datatype?
endQ
10
a) Lists
b) Dictionary
c) Tuples
d) Class
d
Class is a user defined datatype.
endA

Given a function that does not return any value, What value is thrown by itby default when executed in shell.
endQ
10
a) int
b) bool
c) void
d) None
d
Python shell throws a NoneType object back.
endA

Which is the correct operator for power(x^y)?
endQ
10
a) X^y
b) X**y
c) X^^y
d) None of the mentioned
b
In python, power operator is x**y i.e. 2**3=8.
endA

Which one of these is floor division?
endQ
10
a) /
b) //
c) %
d) None of the mentioned
b
When both of the operands are integer then python chops out the fraction part and gives you the round off value, to get the accurate answer use floor division. This is floor division. For ex, 5/2 = 2.5 but both of the operands are integer so answer of this expression in python is 2.To get the 2.5 answer, use floor division.
endA

What is answer of this expression, 22 % 3 is?
endQ
10
a) 7
b) 1
c) 0
d) 5
b
Modulus operator gives remainder. So, 22%3 gives 1 remainder.
endA

You can perform mathematical operation on String?
endQ
10
a) True
b) False
b
You can’t perform mathematical operation on string even if string looks like integers.
endA

What is the output of this expression, 3*1**3?
endQ
10
a) 27
b) 9
c) 3
d) 1
c
First this expression will solve 1**3 because exponential have higher precedence than multiplication, so 1**3 = 1 and 3*1 = 3. Final answer is 3.
endA

What is the maximum possible length of an identifier?
endQ
10
a) 31 characters
b) 63 characters
c) 79 characters
d) none of the mentioned
d
Identifiers can be of any length.
endA

Which of the following is not a keyword?
endQ
10
a) eval
b) assert
c) nonlocal
d) pass
a
eval can be used as a variable.
endA

Which of the following cannot be a variable?
endQ
10
a) __init__
b) in
c) it
d) on
b
in is a keyword.
endA

1. Which module in Python supports regular expressions?
endQ
10
a) re
b) regex
c) pyregex
d) none of the mentioned
a
re is a part of the standard library and can be imported using: import re.
endA

What is the output of the following?
sentence = 'we are humans'
matched = re.match(r'(.*) (.*?) (.*)', sentence)
print(matched.group(2))
endQ
10
a) ‘are’
b) ‘we’
c) ‘humans’
d) ‘we are humans’
c
This function returns the particular subgroup.
endA

What is the output of print 0.1 + 0.2 == 0.3?
endQ
10
a) True
b) False
c) Machine dependent
d) Error
b
Neither of 0.1, 0.2 and 0.3 can be represented accurately in binary. The round off errors from 0.1 and 0.2 accumulate and hence there is a difference of 5.5511e-17 between (0.1 + 0.2) and 0.3.
endA

Which of the following is not a complex number?
endQ
10
a) k = 2 + 3j
b) k = complex(2, 3)
c) k = 2 + 3l
d) k = 2 + 3J
c
l (or L) stands for long.
endA

What does ~4 evaluate to?
endQ
10
a) -5
b) -4
c) -3
d) +3
a
~x is equivalent to -(x+1).
endA
endT

Loops
What is the output of the following?
x = ['ab', 'cd']
for i in x:
    i.upper()
print(x)
endQ
20
a) [‘ab’, ‘cd’] 
b) [‘AB’, ‘CD’] 
c) [None, None]
d) none of the mentioned
a
The function upper() does not modify a string in place, it returns a new string which isn’t being stored anywhere.
endA

What is the output of the following?
x = ['ab', 'cd']
for i in x:
    x.append(i.upper())
print(x)
endQ
20
a) [‘AB’, ‘CD’]
b) [‘ab’, ‘cd’, ‘AB’, ‘CD’]
c) [‘ab’, ‘cd’]
d) none of the mentioned
d
The loop does not terminate as new elements are being added to the list in each iteration.
endA

What is the output of the following?
i = 1
while True:
    if i%3 == 0:
        break
    print(i)
    i + = 1
endQ
20
a) 1 2
b) 1 2 3
c) error
d) none of the mentioned
c
SyntaxError, there shouldn’t be a space between + and = in +=.
endA

What is the output of the following?
i = 5
while True:
    if i%0O11 == 0:
        break
    print(i)
    i += 1
endQ
20
a) 5 6 7 8 9 10
b) 5 6 7 8
c) 5 6
d) error
b
0O11 is an octal number.
endA

What is the output of the following?
i = 5
while True:
    if i%0O9 == 0:
        break
    print(i)
    i += 1
endQ
20
a) 5 6 7 8
b) 5 6 7 8 9
c) 5 6 7 8 9 10 11 12 13 14 15 ….
d) error
d
9 isn’t allowed in an octal number.
endA

What is the output of the following?
i = 1
while True:
    if i%2 == 0:
        break
    print(i)
    i += 2
endQ
20
a) 1
b) 1 2
c) 1 2 3 4 5 6 …
d) 1 3 5 7 9 11 …
d
The loop does not terminate since i is never an even number.
endA

What is the output of the following?
i = 1
while True:
    if i%2 == 0:
        break
    print(i)
    i += 2
endQ
20
a) 1
b) 1 2
c) 1 2 3 4 5 6 …
d) 1 3 5 7 9 11 …
d
The loop does not terminate since i is never an even number.
endA

What is the output of the following?
i = 1
while False:
    if i%2 == 0:
        break
    print(i)
    i += 2
endQ
20
a) 1
b) 1 3 5 7 …
c) 1 2 3 4 …
d) none of the mentioned
d
Control does not enter the loop because of False.
end A

What is the output of the following?
True = False
while True:
    print(True)
    break
endQ
20
a) True
b) False
c) None
d) none of the mentioned
d
SyntaxError, True is a keyword and it’s value cannot be changed.
endA

What is the output of the following?
i = 0
while i < 5:
    print(i)
    i += 1
    if i == 3:
        break
else:
    print(0)
endQ
10
a) 0 1 2 0
b) 0 1 2
c) error
d) none of the mentioned
View Answer
b
The else part is not executed if control breaks out of the loop.
endQ
10

What is the output of the following?
i = 0
while i < 3:
    print(i)
    i += 1
else:
    print(0)
endQ
10
a) 0 1 2 3 0
b) 0 1 2 0
c) 0 1 2
c) error
b
The else part is executed when the condition in the while statement is false.
endA

What is the output of the following?
x = "abcdef"
while i in x:
    print(i, end=" ")
endQ
10
a) a b c d e f
b) abcdef
c) i i i i i i …
d) error
d
NameError, i is not defined.
endA
endT

Strings

